---
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';

interface Props {
    title: string;
    tagLine: string;
    description: string;
    image: string;
    eagerLoading?: boolean;
}

const { title, tagLine, description, image, eagerLoading = false } = Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/*.{jpeg,jpg,png,webp}')
const imgGetter = images[image];
if (!imgGetter) throw new Error(`"${image}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,webp}"`);
const imgObject = await imgGetter();
---

<article class="transition-colors ease-linear duration-300 bg-base-300 flex gap-4 justify-between shadow-block h-76 xl:h-60">
    <div class="p-8 flex flex-col">
        <h3 class="text-xl mb-1">{title}</h3>
        <h4 class="text-lg">{tagLine}</h4>
        <p class="my-3 flex-1">{description}</p>
        <slot />
    </div>

    <div class="h-full max-w-128 flex cool relative">
        <div class="transition-colors ease-linear duration-300 absolute inset-0 bg-purple-200 backdrop-blur-[2px] dark:bg-purple-500 bg-opacity-40 dark:bg-opacity-40 cool"> </div>
        <Image class="object-cover max-w-full" src={imgObject.default}
               widths={[300, 600, imgObject.default.width]} alt="" loading={eagerLoading ? "eager" : "lazy"} />
    </div>
</article>